% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plots.R
\name{plotButterfly}
\alias{plotButterfly}
\title{Create butterfly plot with extras: highlighting and peak topographies}
\usage{
plotButterfly(
  dat,
  sig = NULL,
  topo_time = NULL,
  chan_pos = NULL,
  subset = list(),
  pcrit = 0.05,
  aspect_ratio = 0.5,
  scalp_ratio = 0.5,
  ampl_range = NULL,
  caption = TRUE,
  ...
)
}
\arguments{
\item{dat}{the array of ERP curves which must have at least 'time' and/or 
'chan' dimensions}

\item{sig}{[optional] a corresponding array to \code{dat} which is used 
to highlight significant time windows. It must have at least 'time' and 
measure' dimensions. The 'measure' dimension must have 'p' and 'p_corr' 
levels indicating the uncorrected ('p') and corrected ('p_corr') p-values.}

\item{topo_time}{[optional] an object which describes the time points at 
which the scalp topographies should be plotted. Can be a simple atomic vector
or a data.frame if the time points are not identical across the faceting
dimension(s).}

\item{chan_pos}{a data.frame of channel positions. Obligatory if 
\code{topo_time} is not \code{NULL}.}

\item{subset}{a named list to subset the input arrays; see 
\code{\link[eegR]{subsetArray}}}

\item{pcrit}{the level of alpha to highlight significant effects}

\item{aspect_ratio}{the ratio of \code{y} and \code{x} axes (default: 0.5) 
on the figure. If NULL, it is set automatically. If 'topo_time' is provided,
user-defined 'aspect_ratio' might be adjusted to avoid overlapping scalp
maps.}

\item{scalp_ratio}{the ratio of the diameter of the scalp and the vertical
range of the ERP curves on the figure}

\item{ampl_range}{the range of amplitudes to plot. If \code{NULL} (default), 
it is computed from the data.}

\item{caption}{logical flag indicating if caption should be also returned
(default: TRUE)}

\item{...}{additional arguments passed to \code{\link{topoCoord}}}
}
\value{
\code{plotButterfly} returns a ggplot object.
}
\description{
\code{plotButterfly} creates a multi-channel (a.k.a butterfly) plot. 
Additionally, significant time windows can be highlighted, and peak 
topographies can be displayed above the ERP curves.
}
\examples{
# load example data
data(erps)

# extract channel positions
chan_pos <- attr(erps, "chan")

# collapse pairtypes and participants
tempdat <- avgDims(erps, c("pairtype", "id"))

# plot butterfly with topo-maps at specified time points
plotButterfly(tempdat, topo_time = seq(24, 476, by = 50),
              chan_pos = chan_pos)

# plot butterfly with topo-maps at peaks which are selected 
# automatically; let's look for local maxima on the GFP curves between
# 0 and 480 ms
# 1) add GFP to the dataset
tempdat2 <- compGfp(tempdat, keep_channels = TRUE)

# 2) provide the peak definition
peak_def <- isLocalMaximum(
    subset. = list(time = isBetween(0, 480), chan = "GFP"),
    options. = list(along_dim = "time", n = 15))

# 3) find the peaks
peak_data <- selectValues(tempdat2, peak_def)

# 4) create plot
plotButterfly(tempdat2, topo_time = peak_data, chan_pos = chan_pos)

# highlight time windows where the effect of the 'stimclass' factor is
# statistically significant according to TANOVA
# 1) run TANOVA
result_tanova <- tanova(
    avgDims(erps, "pairtype"),
    list(within = "stimclass", w_id = "id"),
    parallel = .(ncores = 2),
    perm = .(n = 499))
    
# 2) extract p-values and bind them to a single array
pvalues <- extract(result_tanova, c("p", "p_corr"))
pvalues <- bindArrays(pvalues, along_name = "measure")

# 3) plot
plotButterfly(tempdat2, sig = pvalues, topo_time = peak_data, 
              chan_pos = chan_pos)
  
}
