% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{do}
\alias{do}
\title{Execute a function call not unlike \code{do.call}.}
\usage{
do(what, ..., arg_list = list())
}
\arguments{
\item{what}{either a function or a non-empty character string naming the 
function to be called}

\item{...}{arguments to \code{what}, usually specified as \code{key = value}
pairs}

\item{arg_list}{a list of arguments to the function call. The names attribute
of arg_list gives the argument names.}
}
\value{
The result of the (evaluated) function call.
}
\description{
This function serves as an efficient replacement for 
\code{\link[base]{do.call}}; arguments can be passed via \code{...} to avoid 
any copying of potentially large objects.
}
\note{
This function was inspired by \code{do.call2} in package 
\pkg{BBmisc}
}
\examples{
# create a largish data.frame
x <- data.frame(a = seq_len(1e7), b = seq_len(1e7)/10)

# check that do() and do.call() returns the same;
# suppose we want to call head() to display the first 10 rows
stopifnot(identical(head(x, n = 10L), 
                    do("head", arg_list = list(x, n = 10L))))
stopifnot(identical(do.call("head", list(x, n = 10L)), 
                    do("head", x, n = 10L)))

#
# speed comparisons
# 

# a little helper function (do not use for serious measurements)
test <- function(expr) {
    gc(reset = TRUE)
    cat("CPU time:\n")
    print(system.time(expr, gcFirst = FALSE))
    cat("\nRAM usage:\n")
    print(gc())
}

# a direct call for comparison
test(head(x, n = 10L))

# do.call() can be substantially slower because it might make a copy
test(do.call("head", list(x, n = 10L)))

# do() is almost as fast as a direct call in this case
test(do("head", x, n = 10L))

# try to avoid using the 'arg_list' argument for passing large objects
test(do("head", n = 10L, arg_list = list(x = x)))

}
